library(cowplot)
library(dplyr)
library(Matrix)
library(Seurat)
library(RColorBrewer)
library(harmony)

####loading####
#Aldh1l1;Ptbp1;Sun1
#Male | Female
#FACS GFP
#Striatum sample

TKG7 <- Read10X_h5("Ptbp1/Brain_Matrix_file/Ptbp1_FACS/TKG7/filtered_feature_bc_matrix.h5")
TKG4 <- Read10X_h5("Ptbp1/Brain_Matrix_file/Ptbp1_FACS/TKG4/filtered_feature_bc_matrix.h5")

#adding column names to avoid barcode clash
colnames(TKG7) = paste0("TKG7_", colnames(TKG7))
colnames(TKG4) = paste0("TKG4_", colnames(TKG4))

#Create Seurat object. Cutoff 500 genes in 5 cells
TKG7 <- CreateSeuratObject(counts = TKG7, project = "Ptbp1_GFP_Str_WT2", min.cells = 5, min.features = 500)
TKG4 <- CreateSeuratObject(counts = TKG4, project = "Ptbp1_GFP_Str_HOM2", min.cells = 5, min.features = 500)

#Filter 
TKG7 <- subset(TKG7, subset = nCount_RNA > 3000)
TKG4 <- subset(TKG4, subset = nCount_RNA > 3000)

TKG7 <- subset(TKG7, subset = nCount_RNA < 40000)
TKG4 <- subset(TKG4, subset = nCount_RNA < 40000)

###merge####
P_Str <- merge(x = TKG7, y = list(TKG4))

P_Str <- RenameIdents(P_Str, "TKG7" = "WT_Str", "TKG4" = "HOM_Str" )
P_Str <- AddMetaData(P_Str, P_Str@active.ident, "Genotype")

Idents(P_Str) <- "orig.ident"
P_Str <- RenameIdents(P_Str, "TKG7" = "WT_Str2", "TKG4" = "HOM_Str2" )
P_Str <- AddMetaData(P_Str, P_Str@active.ident, "Replicate")
Idents(P_Str) <- "Genotype"

#check distribution of Mitochondrial genes, Ribosomal genes, and number of UMI (=nCount_RNA)
P_Str[["percent.mt"]] <- PercentageFeatureSet(P_Str, pattern = "^mt-")
P_Str[["percent.RPS"]] <- PercentageFeatureSet(P_Str, pattern = "^Rps")
P_Str[["percent.RPL"]] <- PercentageFeatureSet(P_Str, pattern = "^Rpl")

VlnPlot(P_Str, features = c("nCount_RNA","nFeature_RNA",
                            "percent.mt","percent.RPS","percent.RPL"),
        pt.size = 0, group.by = "Replicate")

#order
my_levels <- c("WT_Str", "HOM_Str")
P_Str@active.ident <- factor(x = P_Str@active.ident, levels = my_levels)

#filter some rough values
P_Str <- subset(P_Str, subset = percent.mt <50)
P_Str <- subset(P_Str, subset = percent.RPS <20)

VlnPlot(P_Str, features = c("nCount_RNA","nFeature_RNA",
                            "percent.mt","percent.RPS","percent.RPL"),
        pt.size = 0, group.by = "Replicate")

####processing####
P_Str <- SCTransform(P_Str, vars.to.regress = c("nCount_RNA","nFeature_RNA"))
P_Str <- RunPCA(P_Str, npcs = 50, ndims.print = NA, verbose = F)
P_Str <- RunHarmony(P_Str, group.by.vars = "orig.ident", assay.use = "SCT", plot.convergence = T)
P_Str <- RunUMAP(P_Str, reduction = "harmony", dims = 1:20,
                 n.neighbours = 20L, min.dist = 0.01, spread = 1)
DimPlot(P_Str, reduction = "umap", label = F,pt.size = 0.5, cols = , 
        split.by = "Genotype", ncol = 2) + NoLegend()
P_Str <- FindNeighbors(P_Str, dims = 1:20, reduction = "harmony")
P_Str <- FindClusters(P_Str, resolution = 0.4) #SCT_snn_res.0.8
DimPlot(P_Str, reduction = "umap", label = T, pt.size = 0.5) + NoLegend()

markers <- FindAllMarkers(P_Str, test.use = "wilcox",
                          logfc.threshold = 0.2,
                          min.pct = 0.1, verbose = T)
write.csv(markers, file = "Ptbp1/CSV/DEG_P_FACS_Str.csv")

#Small doublet clusters - lack of any proneural/neurogenic genes + no difference between genotypes
#0 Astrocyte
#1 Astrocyte
#2 Astrocyte
#3 Astrocyte
#4 Astrocyte
#5 Astrocyte
#6 Astrocyte
#7 Proliferating cells
#8 Astrocyte
#9 Doublet
#10 Doublet - high Immune
#11 Doublet - high Oligo
#12 Doublet - high Eppenmal

P_Str <- RenameIdents(P_Str, "0" = "Astrocyte#1", "1" = "Astrocyte#2", "2" = "Astrocyte#1",
                      "3" = "Astrocyte#1", "4" = "Astrocyte#1",
                      "5" = "Astrocyte#2", "6" = "Astrocyte#3", "7" = "Proliferating",
                      "8" = "Astrocyte#1", "9" = "Doublet#1",
                      "10" = "Doublet#2", "11" = "Doublet#3", "12" = "Doublet#4")
Group <- sort(levels(P_Str@active.ident))
P_Str <- AddMetaData(P_Str, P_Str@active.ident, "Clusters")
P_Str@active.ident <- factor(x = P_Str@active.ident, levels = Group)
P_Str@meta.data$Clusters <- factor(x = P_Str@meta.data$Clusters, levels = Group)
DimPlot(P_Str, reduction = "umap", label = T, pt.size = 0.5) + NoLegend()

markers <- FindAllMarkers(P_Str, test.use = "wilcox",
                          logfc.threshold = 0.2,
                          min.pct = 0.1, verbose = T)
write.csv(markers, file = "Ptbp1/CSV/DEG_P_FACS_Str2.csv")
save(P_Str, file = "Ptbp1/Robj/Ptbp1_FACS_Str.Robj")

> sessionInfo()
R version 3.6.1 (2019-07-05)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 19044)

Matrix products: default

locale:
[1] LC_COLLATE=English_United States.1252  LC_CTYPE=English_United States.1252   
[3] LC_MONETARY=English_United States.1252 LC_NUMERIC=C                          
[5] LC_TIME=English_United States.1252    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] harmony_1.0        Rcpp_1.0.7         RColorBrewer_1.1-2 Seurat_3.2.3       Matrix_1.2-17      dplyr_0.8.3       
[7] cowplot_1.0.0     

loaded via a namespace (and not attached):
 [1] nlme_3.1-142         bitops_1.0-6         matrixStats_0.54.0   RcppAnnoy_0.0.18     httr_1.4.1          
 [6] sctransform_0.3.2    tools_3.6.1          R6_2.4.0             irlba_2.3.3          rpart_4.1-15        
[11] KernSmooth_2.23-16   uwot_0.1.10          mgcv_1.8-31          lazyeval_0.2.2       colorspace_1.4-1    
[16] withr_2.1.2          npsurv_0.4-0         tidyselect_0.2.5     gridExtra_2.3        compiler_3.6.1      
[21] plotly_4.9.0         labeling_0.3         caTools_1.17.1.2     scales_1.0.0         lmtest_0.9-37       
[26] spatstat.data_2.1-0  ggridges_0.5.1       pbapply_1.4-1        spatstat_1.64-1      goftest_1.2-2       
[31] stringr_1.4.0        digest_0.6.20        spatstat.utils_2.2-0 pkgconfig_2.0.2      htmltools_0.5.1.1   
[36] htmlwidgets_1.3      rlang_0.4.10         rstudioapi_0.11      shiny_1.3.2          zoo_1.8-6           
[41] jsonlite_1.6.1       ica_1.0-2            gtools_3.8.1         magrittr_1.5         patchwork_1.0.0.9000
[46] munsell_0.5.0        abind_1.4-5          reticulate_1.13      lifecycle_0.1.0      stringi_1.4.3       
[51] MASS_7.3-51.4        gplots_3.0.4         Rtsne_0.15           plyr_1.8.4           grid_3.6.1          
[56] parallel_3.6.1       gdata_2.18.0         listenv_0.7.0        promises_1.0.1       ggrepel_0.8.1       
[61] crayon_1.3.4         deldir_0.1-22        miniUI_0.1.1.1       lattice_0.20-38      splines_3.6.1       
[66] tensor_1.5           pillar_1.4.2         igraph_1.2.4.1       future.apply_1.3.0   reshape2_1.4.3      
[71] codetools_0.2-16     leiden_0.3.1         glue_1.3.1           lsei_1.2-0           data.table_1.12.8   
[76] vctrs_0.3.8          png_0.1-7            httpuv_1.5.1         gtable_0.3.0         RANN_2.6.1          
[81] purrr_0.3.4          polyclip_1.10-0      tidyr_1.0.2          scattermore_0.7      future_1.14.0       
[86] assertthat_0.2.1     ggplot2_3.3.5        rsvd_1.0.2           mime_0.7             xtable_1.8-4        
[91] later_0.8.0          survival_3.1-7       viridisLite_0.3.0    tibble_2.1.3         cluster_2.1.0       
[96] globals_0.12.4       fitdistrplus_1.0-14  ROCR_1.0-7   
